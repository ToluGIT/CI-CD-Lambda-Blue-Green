pipeline {
    agent any

    environment {
        IMAGE_NAME = 'lambda_function.zip'
        BUCKET_NAME = 's3-jenkins-lambda'
        LAMBDA_FUNCTION_NAME = 'blue-green-lambda'
        DEPLOYMENT_GROUP_NAME = 'blue-green-deployment-group'
        CODEDEPLOY_APPLICATION_NAME = 'blue-green-lambda'
        SNS_TOPIC_ARN = credentials('sns-topic-arn')
        AWS_DEFAULT_REGION = 'us-east-1'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/ToluGIT/testlambda.git'
            }
        }

        stage('Build Lambda Package') {
            steps {
                sh 'zip lambda_function.zip lambda_function.py'
            }
        }

        stage('Upload to S3') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY', credentialsId: 'aws')]) {
                    sh """
                        aws s3 cp lambda_function.zip s3://${BUCKET_NAME}/lambda_function.zip
                    """
                }
            }
        }

        stage('Blue-Green Traffic Shift') {
            steps {
                withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY', credentialsId: 'aws')]) {
                    sh """
                        aws deploy create-deployment \
                        --application-name ${CODEDEPLOY_APPLICATION_NAME} \
                        --deployment-group-name ${DEPLOYMENT_GROUP_NAME} \
                        --deployment-config-name CodeDeployDefault.LambdaAllAtOnce \
                        --deployment-style deploymentType=BLUE_GREEN,deploymentOption=WITH_TRAFFIC_CONTROL \
                        --s3-location bucket=${BUCKET_NAME},key=lambda_function.zip,bundleType=zip
                    """
                }
            }
        }

        stage('Notify') {
            steps {
                script {
                    sh """
                        aws sns publish --topic-arn $SNS_TOPIC_ARN \
                        --message 'Lambda function deployed successfully!'
                    """
                    echo 'SNS notification sent.'
                }
            }
        }
    }
}
